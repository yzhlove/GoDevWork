// Code generated by protoc-gen-go. DO NOT EDIT.
// source: snowflake.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Sf struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Sf) Reset()         { *m = Sf{} }
func (m *Sf) String() string { return proto.CompactTextString(m) }
func (*Sf) ProtoMessage()    {}
func (*Sf) Descriptor() ([]byte, []int) {
	return fileDescriptor_aaa8bfc3cc8f3970, []int{0}
}

func (m *Sf) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sf.Unmarshal(m, b)
}
func (m *Sf) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sf.Marshal(b, m, deterministic)
}
func (m *Sf) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sf.Merge(m, src)
}
func (m *Sf) XXX_Size() int {
	return xxx_messageInfo_Sf.Size(m)
}
func (m *Sf) XXX_DiscardUnknown() {
	xxx_messageInfo_Sf.DiscardUnknown(m)
}

var xxx_messageInfo_Sf proto.InternalMessageInfo

type Sf_Nil struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Sf_Nil) Reset()         { *m = Sf_Nil{} }
func (m *Sf_Nil) String() string { return proto.CompactTextString(m) }
func (*Sf_Nil) ProtoMessage()    {}
func (*Sf_Nil) Descriptor() ([]byte, []int) {
	return fileDescriptor_aaa8bfc3cc8f3970, []int{0, 0}
}

func (m *Sf_Nil) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sf_Nil.Unmarshal(m, b)
}
func (m *Sf_Nil) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sf_Nil.Marshal(b, m, deterministic)
}
func (m *Sf_Nil) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sf_Nil.Merge(m, src)
}
func (m *Sf_Nil) XXX_Size() int {
	return xxx_messageInfo_Sf_Nil.Size(m)
}
func (m *Sf_Nil) XXX_DiscardUnknown() {
	xxx_messageInfo_Sf_Nil.DiscardUnknown(m)
}

var xxx_messageInfo_Sf_Nil proto.InternalMessageInfo

type Sf_UID struct {
	Uid                  uint64   `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Sf_UID) Reset()         { *m = Sf_UID{} }
func (m *Sf_UID) String() string { return proto.CompactTextString(m) }
func (*Sf_UID) ProtoMessage()    {}
func (*Sf_UID) Descriptor() ([]byte, []int) {
	return fileDescriptor_aaa8bfc3cc8f3970, []int{0, 1}
}

func (m *Sf_UID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sf_UID.Unmarshal(m, b)
}
func (m *Sf_UID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sf_UID.Marshal(b, m, deterministic)
}
func (m *Sf_UID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sf_UID.Merge(m, src)
}
func (m *Sf_UID) XXX_Size() int {
	return xxx_messageInfo_Sf_UID.Size(m)
}
func (m *Sf_UID) XXX_DiscardUnknown() {
	xxx_messageInfo_Sf_UID.DiscardUnknown(m)
}

var xxx_messageInfo_Sf_UID proto.InternalMessageInfo

func (m *Sf_UID) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func init() {
	proto.RegisterType((*Sf)(nil), "proto.Sf")
	proto.RegisterType((*Sf_Nil)(nil), "proto.Sf.Nil")
	proto.RegisterType((*Sf_UID)(nil), "proto.Sf.UID")
}

func init() { proto.RegisterFile("snowflake.proto", fileDescriptor_aaa8bfc3cc8f3970) }

var fileDescriptor_aaa8bfc3cc8f3970 = []byte{
	// 121 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0xce, 0xcb, 0x2f,
	0x4f, 0xcb, 0x49, 0xcc, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a,
	0x2a, 0x5c, 0x4c, 0xc1, 0x69, 0x52, 0xac, 0x5c, 0xcc, 0x7e, 0x99, 0x39, 0x52, 0xe2, 0x5c, 0xcc,
	0xa1, 0x9e, 0x2e, 0x42, 0x02, 0x5c, 0xcc, 0xa5, 0x99, 0x29, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x2c,
	0x41, 0x20, 0xa6, 0x91, 0x31, 0x17, 0x67, 0x70, 0x5a, 0x70, 0x6a, 0x51, 0x59, 0x66, 0x72, 0xaa,
	0x90, 0x1a, 0x17, 0x9b, 0x7b, 0x6a, 0x09, 0x48, 0x21, 0x2f, 0xc4, 0x2c, 0xbd, 0xe0, 0x34, 0x3d,
	0x90, 0x76, 0x24, 0x6e, 0xa8, 0xa7, 0x4b, 0x12, 0x1b, 0x98, 0x67, 0x0c, 0x08, 0x00, 0x00, 0xff,
	0xff, 0x08, 0xc6, 0x6c, 0xf7, 0x7b, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SfServiceClient is the client API for SfService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SfServiceClient interface {
	GetUID(ctx context.Context, in *Sf_Nil, opts ...grpc.CallOption) (*Sf_UID, error)
}

type sfServiceClient struct {
	cc *grpc.ClientConn
}

func NewSfServiceClient(cc *grpc.ClientConn) SfServiceClient {
	return &sfServiceClient{cc}
}

func (c *sfServiceClient) GetUID(ctx context.Context, in *Sf_Nil, opts ...grpc.CallOption) (*Sf_UID, error) {
	out := new(Sf_UID)
	err := c.cc.Invoke(ctx, "/proto.SfService/GetUID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SfServiceServer is the server API for SfService service.
type SfServiceServer interface {
	GetUID(context.Context, *Sf_Nil) (*Sf_UID, error)
}

// UnimplementedSfServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSfServiceServer struct {
}

func (*UnimplementedSfServiceServer) GetUID(ctx context.Context, req *Sf_Nil) (*Sf_UID, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUID not implemented")
}

func RegisterSfServiceServer(s *grpc.Server, srv SfServiceServer) {
	s.RegisterService(&_SfService_serviceDesc, srv)
}

func _SfService_GetUID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Sf_Nil)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SfServiceServer).GetUID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.SfService/GetUID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SfServiceServer).GetUID(ctx, req.(*Sf_Nil))
	}
	return interceptor(ctx, in, info, handler)
}

var _SfService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.SfService",
	HandlerType: (*SfServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUID",
			Handler:    _SfService_GetUID_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "snowflake.proto",
}
